"use strict";(self.webpackChunktaro_docs=self.webpackChunktaro_docs||[]).push([[48207],{23510:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});t(37953);var i=t(58860);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const l={title:"Design and Dimension unit"},s=void 0,p={unversionedId:"size",id:"version-3.x/size",title:"Design and Dimension unit",description:"It is recommended to use px,  % for dimension units in Taro, Taro will convert all units by default. In Taro, the size is written in a 1:1 relationship, that is, if the length 100px is measured from the design, then the size is written as 100px, and when it is converted to WeChat mini-program, the size will be converted to 100rpx by default, and when it is converted to H5, it will be converted to a value in rem by default.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-3.x/size.md",sourceDirName:".",slug:"/size",permalink:"/taro-docs/en/docs/3.x/size",draft:!1,editUrl:"https://github.com/nervjs/taro-docs/edit/master/versioned_docs/version-3.x/size.md",tags:[],version:"3.x",frontMatter:{title:"Design and Dimension unit"},sidebar:"docs",previous:{title:"Compile Configuration",permalink:"/taro-docs/en/docs/3.x/config"},next:{title:"Global Configuration",permalink:"/taro-docs/en/docs/3.x/app-config"}},c={},d=[{value:"API",id:"api",level:2},{value:"Configuration",id:"configuration",level:2},{value:"<code>onePxTransform</code> (Boolean)",id:"onepxtransform-boolean",level:3},{value:"<code>unitPrecision</code> (Number)",id:"unitprecision-number",level:3},{value:"<code>propList</code> (Array)",id:"proplist-array",level:3},{value:"<code>selectorBlackList</code>",id:"selectorblacklist",level:3},{value:"<code>replace</code> (Boolean)",id:"replace-boolean",level:3},{value:"<code>mediaQuery</code> (Boolean)",id:"mediaquery-boolean",level:3},{value:"<code>minPixelValue</code> (Number)",id:"minpixelvalue-number",level:3},{value:"CSS Compile-time ignores",id:"css-compile-time-ignores",level:2},{value:"Ignore single attributes",id:"ignore-single-attributes",level:3},{value:"Ignore style files",id:"ignore-style-files",level:3},{value:"Ignore style examples",id:"ignore-style-examples",level:3},{value:"Add a CSS comment to force the declaration to ignore the next line",id:"add-a-css-comment-to-force-the-declaration-to-ignore-the-next-line",level:4},{value:"Add CSS comments to force the declaration of multiple lines in between comments",id:"add-css-comments-to-force-the-declaration-of-multiple-lines-in-between-comments",level:4},{value:"Write as in-line style",id:"write-as-in-line-style",level:4},{value:"Links",id:"links",level:3}],u={toc:d},g="wrapper";function m(e){var{components:n}=e,t=a(e,["components"]);return(0,i.yg)(g,o(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},i=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),i.forEach((function(n){r(e,n,t[n])}))}return e}({},u,t),{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"It is recommended to use ",(0,i.yg)("inlineCode",{parentName:"p"},"px"),", ",(0,i.yg)("inlineCode",{parentName:"p"}," %")," for dimension units in Taro, Taro will convert all units by default. In Taro, the size is written in a 1:1 relationship, that is, if the length ",(0,i.yg)("inlineCode",{parentName:"p"},"100px")," is measured from the design, then the size is written as ",(0,i.yg)("inlineCode",{parentName:"p"},"100px"),", and when it is converted to WeChat mini-program, the size will be converted to ",(0,i.yg)("inlineCode",{parentName:"p"},"100rpx")," by default, and when it is converted to H5, it will be converted to a value in ",(0,i.yg)("inlineCode",{parentName:"p"},"rem")," by default."),(0,i.yg)("p",null,"If you want some of the ",(0,i.yg)("inlineCode",{parentName:"p"},"px")," units not to be converted to ",(0,i.yg)("inlineCode",{parentName:"p"},"rpx")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"rem"),", it is most convenient to add a capital letter to the px units, such as ",(0,i.yg)("inlineCode",{parentName:"p"},"Px")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"PX"),", which will be ignored by the conversion plugin."),(0,i.yg)("p",null,"Taro defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"750px")," as the conversion size standard, if the design is not ",(0,i.yg)("inlineCode",{parentName:"p"},"750px"),", you need to set it in the project configuration ",(0,i.yg)("inlineCode",{parentName:"p"},"config/index.js"),", for example, if the design size is ",(0,i.yg)("inlineCode",{parentName:"p"},"640px"),", you need to modify the ",(0,i.yg)("inlineCode",{parentName:"p"}," designWidth")," to ",(0,i.yg)("inlineCode",{parentName:"p"},"640"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/config/index.js"',title:'"/config/index.js"'},"const config = {\n  projectName: 'myProject',\n  date: '2018-4-18',\n  designWidth: 640,\n  ....\n}\n")),(0,i.yg)("p",null,"Taro supports ",(0,i.yg)("inlineCode",{parentName:"p"},"750"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"640")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"828")," sizes and their conversion rules are as follows."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"const DEVICE_RATIO = {\n  '640': 2.34 / 2,\n  '750': 1,\n  '828': 1.81 / 2\n}\n")),(0,i.yg)("p",null,"When using Taro, it is recommended to use iPhone 6 ",(0,i.yg)("inlineCode",{parentName:"p"},"750px")," as the design size standard."),(0,i.yg)("p",null,"If your design is ",(0,i.yg)("inlineCode",{parentName:"p"},"375"),", which is not one of the three above, then you need to configure ",(0,i.yg)("inlineCode",{parentName:"p"},"designWidth")," to ",(0,i.yg)("inlineCode",{parentName:"p"},"375")," and add the conversion rule in ",(0,i.yg)("inlineCode",{parentName:"p"},"DEVICE_RATIO")," as follows."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"{5}","{5}":!0},"const DEVICE_RATIO = {\n  '640': 2.34 / 2,\n  '750': 1,\n  '828': 1.81 / 2,\n  '375': 2 / 1\n}\n")),(0,i.yg)("h2",{id:"api"},"API"),(0,i.yg)("p",null,"During compilation, Taro will do the size conversion for you, but if you write inline styles in JS, you can't do the replacement.\nIn this case, Taro provides the API ",(0,i.yg)("inlineCode",{parentName:"p"},"Taro.pxTransform")," to do the size conversion at runtime."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"Taro.pxTransform(10) \n")),(0,i.yg)("h2",{id:"configuration"},"Configuration"),(0,i.yg)("p",null,"The default configuration converts all ",(0,i.yg)("inlineCode",{parentName:"p"},"px")," units, and ",(0,i.yg)("inlineCode",{parentName:"p"},"Px")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"PX")," with uppercase letters are ignored."),(0,i.yg)("p",null,"The default values of the parameters are as follows\uff1a"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"{\n  onePxTransform: true,\n  unitPrecision: 5,\n  propList: ['*'],\n  selectorBlackList: [],\n  replace: true,\n  mediaQuery: false,\n  minPixelValue: 0\n}\n")),(0,i.yg)("p",null,"Type: ",(0,i.yg)("inlineCode",{parentName:"p"},"Object | Null")),(0,i.yg)("h3",{id:"onepxtransform-boolean"},(0,i.yg)("inlineCode",{parentName:"h3"},"onePxTransform")," (Boolean)"),(0,i.yg)("p",null,"Set whether 1px needs to be converted"),(0,i.yg)("h3",{id:"unitprecision-number"},(0,i.yg)("inlineCode",{parentName:"h3"},"unitPrecision")," (Number)"),(0,i.yg)("p",null,"The number of decimal places allowed in the REM unit."),(0,i.yg)("h3",{id:"proplist-array"},(0,i.yg)("inlineCode",{parentName:"h3"},"propList")," (Array)"),(0,i.yg)("p",null,"The property that allows the conversion."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Values need to be exact matches."),(0,i.yg)("li",{parentName:"ul"},"Use wildcard ",(0,i.yg)("inlineCode",{parentName:"li"},"*")," to enable all properties. Example: ",(0,i.yg)("inlineCode",{parentName:"li"},"['*']")),(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"*")," at the start or end of a word. (",(0,i.yg)("inlineCode",{parentName:"li"},"['*position*']")," will match ",(0,i.yg)("inlineCode",{parentName:"li"},"background-position-y"),")"),(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"!")," to not match a property. Example: ",(0,i.yg)("inlineCode",{parentName:"li"},"['*', '!letter-spacing']")),(0,i.yg)("li",{parentName:"ul"},'Combine the "not" prefix with the other prefixes. Example: ',(0,i.yg)("inlineCode",{parentName:"li"},"['*', '!font*']"))),(0,i.yg)("h3",{id:"selectorblacklist"},(0,i.yg)("inlineCode",{parentName:"h3"},"selectorBlackList")),(0,i.yg)("p",null,"Selectors in the blacklist will be ignored."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"If value is string, it checks to see if selector contains the string.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"['body']")," will match ",(0,i.yg)("inlineCode",{parentName:"li"},".body-class")))),(0,i.yg)("li",{parentName:"ul"},"If value is regexp, it checks to see if the selector matches the regexp.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"[/^body$/]")," will match ",(0,i.yg)("inlineCode",{parentName:"li"},"body")," but not ",(0,i.yg)("inlineCode",{parentName:"li"},".body"))))),(0,i.yg)("h3",{id:"replace-boolean"},(0,i.yg)("inlineCode",{parentName:"h3"},"replace")," (Boolean)"),(0,i.yg)("p",null,"Replace directly instead of appending an entry to override."),(0,i.yg)("h3",{id:"mediaquery-boolean"},(0,i.yg)("inlineCode",{parentName:"h3"},"mediaQuery")," (Boolean)"),(0,i.yg)("p",null,"Allow px unit conversion in media queries"),(0,i.yg)("h3",{id:"minpixelvalue-number"},(0,i.yg)("inlineCode",{parentName:"h3"},"minPixelValue")," (Number)"),(0,i.yg)("p",null,"Set a minimum px value that can be converted"),(0,i.yg)("p",null,"The configuration rules correspond to ",(0,i.yg)("inlineCode",{parentName:"p"},"config/index.js"),", e.g."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js",metastring:'{9-14,20-25} title="/config/index.js"',"{9-14,20-25}":!0,title:'"/config/index.js"'},"{\n  h5: {\n    publicPath: '/',\n    staticDirectory: 'static',\n    postcss: {\n      autoprefixer: {\n        enable: true\n      },\n      pxtransform: {\n        enable: true,\n        config: {\n          selectorBlackList: ['body']\n        }\n      }\n    }\n  },\n  mini: {\n    // ...\n    postcss: {\n      pxtransform: {\n        enable: true,\n        config: {\n          selectorBlackList: ['body']\n        }\n      }\n    }\n  }\n}\n")),(0,i.yg)("h2",{id:"css-compile-time-ignores"},"CSS Compile-time ignores"),(0,i.yg)("h3",{id:"ignore-single-attributes"},"Ignore single attributes"),(0,i.yg)("p",null,"The simplest way to ignore individual attributes currently is to use capital letters for px units."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-css"}," /* `px` is converted to `rem` */\n.convert {\n  font-size: 16px; // converted to 1rem\n}\n\n /* `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers */\n.ignore {\n  border: 1Px solid; // ignored\n  border-width: 2PX; // ignored\n}\n")),(0,i.yg)("h3",{id:"ignore-style-files"},"Ignore style files"),(0,i.yg)("p",null,"The plugin does not handle files with the comment ",(0,i.yg)("inlineCode",{parentName:"p"},"/*postcss-pxtransform disable*/")," in the header."),(0,i.yg)("h3",{id:"ignore-style-examples"},"Ignore style examples"),(0,i.yg)("p",null,"When multiple lines of text are omitted from a style file we generally use the following code."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-css",metastring:"{3}","{3}":!0},".textHide {\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp:2;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n")),(0,i.yg)("p",null,"However, Taro is compiled without the ",(0,i.yg)("inlineCode",{parentName:"p"},"-webkit-box-orient: vertical;")," style attribute, so we need to ignore this style"),(0,i.yg)("h4",{id:"add-a-css-comment-to-force-the-declaration-to-ignore-the-next-line"},"Add a CSS comment to force the declaration to ignore the next line"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-css",metastring:"{1}","{1}":!0},"/* autoprefixer: ignore next */\n-webkit-box-orient: vertical;\n")),(0,i.yg)("h4",{id:"add-css-comments-to-force-the-declaration-of-multiple-lines-in-between-comments"},"Add CSS comments to force the declaration of multiple lines in between comments"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-css",metastring:"{1,3}","{1,3}":!0},"/* autoprefixer: off */\n-webkit-box-orient: vertical;\n/* autoprefixer: on */\n")),(0,i.yg)("h4",{id:"write-as-in-line-style"},"Write as in-line style"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-HTML",metastring:"{2-9}","{2-9}":!0},"<View \n  style={{\n    display: '-webkit-box',\n    '-webkit-box-orient': 'vertical',\n    '-webkit-line-clamp': 2,\n    'text-overflow': 'ellipsis',\n    overflow: 'hidden',\n    'line-height': 2\n  }}\n>\n  This is the content to be omitted\n</View>\n")),(0,i.yg)("h3",{id:"links"},"Links"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://taro-club.jd.com/topic/2270/taro%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E7%9C%81%E7%95%A5%E4%B8%8D%E7%94%9F%E6%95%88"},"Taro multi-line text omission does not work"))))}m.isMDXComponent=!0},58860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var i=t(37953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return t?i.createElement(m,a(a({ref:n},c),{},{components:t})):i.createElement(m,a({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);