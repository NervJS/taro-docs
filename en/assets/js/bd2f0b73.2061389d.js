"use strict";(self.webpackChunktaro_docs=self.webpackChunktaro_docs||[]).push([[71621],{58860:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>d});var n=r(37953);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(r),g=o,d=s["".concat(c,".").concat(g)]||s[g]||y[g]||l;return r?n.createElement(d,a(a({ref:t},u),{},{components:r})):n.createElement(d,a({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},64466:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});r(37953);var n=r(58860);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const i={title:"Taro.checkIsSupportSoterAuthentication(option)",sidebar_label:"checkIsSupportSoterAuthentication"},c=void 0,p={unversionedId:"apis/open-api/soter/checkIsSupportSoterAuthentication",id:"apis/open-api/soter/checkIsSupportSoterAuthentication",title:"Taro.checkIsSupportSoterAuthentication(option)",description:"Gets SOTER biometric authentication methods supported by this device.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/apis/open-api/soter/checkIsSupportSoterAuthentication.md",sourceDirName:"apis/open-api/soter",slug:"/apis/open-api/soter/checkIsSupportSoterAuthentication",permalink:"/taro-docs/en/docs/apis/open-api/soter/checkIsSupportSoterAuthentication",draft:!1,editUrl:"https://github.com/nervjs/taro-docs/edit/master/docs/apis/open-api/soter/checkIsSupportSoterAuthentication.md",tags:[],version:"current",frontMatter:{title:"Taro.checkIsSupportSoterAuthentication(option)",sidebar_label:"checkIsSupportSoterAuthentication"},sidebar:"API",previous:{title:"startSoterAuthentication",permalink:"/taro-docs/en/docs/apis/open-api/soter/startSoterAuthentication"},next:{title:"checkIsSoterEnrolledInDevice",permalink:"/taro-docs/en/docs/apis/open-api/soter/checkIsSoterEnrolledInDevice"}},u={},s=[{value:"Type",id:"type",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Option",id:"option",level:3},{value:"SuccessCallbackResult",id:"successcallbackresult",level:3},{value:"requestAuthModes",id:"requestauthmodes",level:3},{value:"API Support",id:"api-support",level:4},{value:"Sample Code",id:"sample-code",level:2},{value:"API Support",id:"api-support-1",level:2}],y={toc:s},g="wrapper";function d(e){var{components:t}=e,r=a(e,["components"]);return(0,n.yg)(g,l(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},y,r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Gets SOTER biometric authentication methods supported by this device."),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},(0,n.yg)("a",{parentName:"p",href:"https://developers.weixin.qq.com/miniprogram/en/dev/api/open-api/soter/wx.checkIsSupportSoterAuthentication.html"},"Reference"))),(0,n.yg)("h2",{id:"type"},"Type"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},"(option?: Option) => Promise<SuccessCallbackResult>\n")),(0,n.yg)("h2",{id:"parameters"},"Parameters"),(0,n.yg)("h3",{id:"option"},"Option"),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Property"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",{style:{textAlign:"center"}},"Required"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"complete"),(0,n.yg)("td",null,(0,n.yg)("code",null,"(res: any) => void")),(0,n.yg)("td",{style:{textAlign:"center"}},"No"),(0,n.yg)("td",null,"The callback function used when the API call completed (always executed whether the call succeeds or fails)")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fail"),(0,n.yg)("td",null,(0,n.yg)("code",null,"(res: any) => void")),(0,n.yg)("td",{style:{textAlign:"center"}},"No"),(0,n.yg)("td",null,"The callback function for a failed API call")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"success"),(0,n.yg)("td",null,(0,n.yg)("code",null,"(res: Result) => void")),(0,n.yg)("td",{style:{textAlign:"center"}},"No"),(0,n.yg)("td",null,"The callback function for a successful API call")))),(0,n.yg)("h3",{id:"successcallbackresult"},"SuccessCallbackResult"),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Property"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"supportMode"),(0,n.yg)("td",null,(0,n.yg)("code",null,'("fingerPrint" | "facial" | "speech")[]')),(0,n.yg)("td",null,"Biometric recognition methods recognized by SOTER and supported by this device")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"errMsg"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,"Call result")))),(0,n.yg)("h3",{id:"requestauthmodes"},"requestAuthModes"),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Property"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fingerPrint"),(0,n.yg)("td",null,"Fingerprint recognition")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"facial"),(0,n.yg)("td",null,"Face recognition (not supported)")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"speech"),(0,n.yg)("td",null,"Voiceprint recognition (not supported)")))),(0,n.yg)("h4",{id:"api-support"},"API Support"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"center"},"API"),(0,n.yg)("th",{parentName:"tr",align:"center"},"WeChat Mini-Program"),(0,n.yg)("th",{parentName:"tr",align:"center"},"H5"),(0,n.yg)("th",{parentName:"tr",align:"center"},"React Native"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"center"},"requestAuthModes.speech"),(0,n.yg)("td",{parentName:"tr",align:"center"}),(0,n.yg)("td",{parentName:"tr",align:"center"}),(0,n.yg)("td",{parentName:"tr",align:"center"})))),(0,n.yg)("h2",{id:"sample-code"},"Sample Code"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},"Taro.checkIsSupportSoterAuthentication({\n  success: function (res) {\n    // res.supportMode = [] No biometric recognition methods supported by SOTER are available\n    // res.supportMode = ['fingerPrint'] Only fingerprint recognition is supported\n    // res.supportMode = ['fingerPrint', 'facial'] Fingerprint recognition and face recognition are supported\n  }\n})\n")),(0,n.yg)("h2",{id:"api-support-1"},"API Support"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"center"},"API"),(0,n.yg)("th",{parentName:"tr",align:"center"},"WeChat Mini-Program"),(0,n.yg)("th",{parentName:"tr",align:"center"},"H5"),(0,n.yg)("th",{parentName:"tr",align:"center"},"React Native"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"center"},"Taro.checkIsSupportSoterAuthentication"),(0,n.yg)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.yg)("td",{parentName:"tr",align:"center"}),(0,n.yg)("td",{parentName:"tr",align:"center"})))))}d.isMDXComponent=!0}}]);