"use strict";(self.webpackChunktaro_docs=self.webpackChunktaro_docs||[]).push([[91186],{68789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>f,frontMatter:()=>c,metadata:()=>u,toc:()=>d});t(37953);var r=t(58860),a=t(13669),o=t(47756);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const c={title:"Use CSS-in-JS"},p=void 0,u={unversionedId:"css-in-js",id:"css-in-js",title:"Use CSS-in-JS",description:"linaria",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/css-in-js.mdx",sourceDirName:".",slug:"/css-in-js",permalink:"/taro-docs/en/docs/css-in-js",draft:!1,editUrl:"https://github.com/nervjs/taro-docs/edit/master/docs/css-in-js.mdx",tags:[],version:"current",frontMatter:{title:"Use CSS-in-JS"},sidebar:"docs",previous:{title:"Use CSS Modules",permalink:"/taro-docs/en/docs/css-modules"},next:{title:"\u4f7f\u7528 Tailwind CSS",permalink:"/taro-docs/en/docs/tailwindcss"}},m={},d=[{value:"linaria",id:"linaria",level:2},{value:"Fower",id:"fower",level:2}],y={toc:d},g="wrapper";function f(e){var{components:n}=e,t=s(e,["components"]);return(0,r.yg)(g,l(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){i(e,n,t[n])}))}return e}({},y,t),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"linaria"},"linaria"),(0,r.yg)("p",null,"There is a common CSS-in-JS solution in the React community: ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/styled-components/styled-components"},"styled-components"),"\u3002Unfortunately, however, ",(0,r.yg)("inlineCode",{parentName:"p"},"styled-components")," uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"<style>")," tag to dynamically control styles, and there is no similar solution in mini program. But we can achieve the same functionality with ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/callstack/linaria"},"linaria"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"linaria")," mainly provides the following features."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"API that approximates ",(0,r.yg)("inlineCode",{parentName:"li"},"styled-components")),(0,r.yg)("li",{parentName:"ul"},"TypeScript support"),(0,r.yg)("li",{parentName:"ul"},"Zero runtime")),(0,r.yg)("p",null,"Using ",(0,r.yg)("inlineCode",{parentName:"p"},"linaria")," is also very simple, first installing the dependencies via NPM:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ pnpm i @linaria/core @linaria/react @linaria/babel-preset @linaria/webpack-loader\n")),(0,r.yg)("p",null,"Next, configure ",(0,r.yg)("inlineCode",{parentName:"p"},"babel.config.js")," in the project root directory:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="babel.config.js"',title:'"babel.config.js"'},"module.exports = {\n  presets: [\n    ['taro', {\n      framework: 'react',\n      ts: true\n    }],\n    '@linaria' // \u6dfb\u52a0\u5230 babel-preset\n  ]\n}\n")),(0,r.yg)("p",null,"After that, configure ",(0,r.yg)("inlineCode",{parentName:"p"},"config/index.js")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="config/index.js"',title:'"config/index.js"'},"const config = {\n  mini: {\n    webpackChain(chain, webpack) {\n      // linaria/loader options refer to https://github.com/callstack/linaria/blob/master/docs/BUNDLERS_INTEGRATION.md#webpack\n      chain.module\n        .rule('script')\n        .use('linariaLoader')\n        .loader('@linaria/webpack-loader')\n        .options({\n          sourceMap: process.env.NODE_ENV !== 'production',\n        })\n    }\n  },\n  h5: {\n    webpackChain(chain, webpack) {\n      chain.module\n        .rule('script')\n        .use('linariaLoader')\n        .loader('@linaria/webpack-loader')\n        .options({\n          sourceMap: process.env.NODE_ENV !== 'production',\n        })\n    }\n  }\n}\n")),(0,r.yg)("p",null,"Finally, create a new ",(0,r.yg)("inlineCode",{parentName:"p"},"linaria.config.js")," in the root of the project"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="linaria.config.js"',title:'"linaria.config.js"'},'// linaria configuration details: https://github.com/callstack/linaria/blob/master/docs/CONFIGURATION.md#options\nmodule.exports = {\n  rules: [\n    {\n      action: require("@linaria/shaker").default,\n    },\n    {\n      test: /node_modules[\\/\\\\](?!@tarojs)/,\n      action: "ignore"\n    }\n  ]\n}\n')),(0,r.yg)("p",null,"In the business code we can use it like this."),(0,r.yg)(a.A,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"TypeScript",value:"TS"}],mdxType:"Tabs"},(0,r.yg)(o.A,{value:"JS",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-jsx"},"import { styled } from '@linaria/react'\nimport { View } from '@tarojs/components'\nimport React from 'react'\n\nconst Title = styled(View)`\n  color: ${props => props.color}\n`;\n\nconst Index = () => {\n  return <Title color='red'>\n    Hello World!\n  </Title>\n}\n\nexport default Index\n"))),(0,r.yg)(o.A,{value:"TS",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"import { styled } from '@linaria/react'\nimport { View, ViewProps } from '@tarojs/components'\n\nimport React from 'react'\nimport './index.scss'\n\ndeclare type Component<TProps> = ((props: TProps) => any) | {\n  new (props: TProps): any\n}\n\ntype VPS = ViewProps & { style?: React.CSSProperties }\ntype TP = VPS & { color: string }\nconst Title = styled<TP, VPS, Component<TP>>(View)`\n  color: ${props => props.color}\n`\nconst Index: React.FC = () => {\n  return <Title color='red'>\n    Hello World!\n  </Title>\n}\n\nexport default Index\n")))),(0,r.yg)("h2",{id:"fower"},"Fower"),(0,r.yg)("p",null,"The community has another option ",(0,r.yg)("strong",{parentName:"p"},"Fower"),"\uff0c",(0,r.yg)("a",{parentName:"p",href:"https://fower.vercel.app/docs/use-with-taro"},"Documentation")))}f.isMDXComponent=!0}}]);